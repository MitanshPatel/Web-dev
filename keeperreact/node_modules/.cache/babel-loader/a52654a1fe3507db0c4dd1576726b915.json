{"ast":null,"code":"// import React from \"react\";\n\n// function CreateArea(props) {\n\n//     const [note, setNote] = React.useState({\n//         title: \"\",\n//         content: \"\"\n//     });\n\n//     function handleChange(event) {\n//         const {name, value} = event.target;\n\n//         setNote((prevNote)=>{\n//             return{\n//                 ...prevNote,\n//                 [name]: value           //if name=title, then it converts to title: \"Blah blah\"\n//             }\n//         })\n//     }\n\n//     function submitNote(event){\n//         props.onAdd(note);     //to send note back to parent app.jsx\n//         setNote({          //once added, clear out the adding div\n//             title: \"\",\n//             content: \"\"\n//         })\n//         event.preventDefault();    //to not reload page and remove note\n//     }\n\n//     return (\n//         <div>\n//             <form>\n//                 <input onChange={handleChange} value={note.title} name=\"title\" placeholder=\"Title\" />\n//                 <textarea onChange={handleChange} name=\"content\" value={note.content} placeholder=\"Take a note...\" rows=\"3\" />\n//                 <button onClick={submitNote} >Add</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default CreateArea;","map":{"version":3,"names":[],"sources":["C:/Users/Mitansh Patel/Downloads/CODING/Web Dev/keeperreact/src/components/CreateArea.jsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// function CreateArea(props) {\r\n\r\n//     const [note, setNote] = React.useState({\r\n//         title: \"\",\r\n//         content: \"\"\r\n//     });\r\n\r\n//     function handleChange(event) {\r\n//         const {name, value} = event.target;\r\n\r\n//         setNote((prevNote)=>{\r\n//             return{\r\n//                 ...prevNote,\r\n//                 [name]: value           //if name=title, then it converts to title: \"Blah blah\"\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     function submitNote(event){\r\n//         props.onAdd(note);     //to send note back to parent app.jsx\r\n//         setNote({          //once added, clear out the adding div\r\n//             title: \"\",\r\n//             content: \"\"\r\n//         })\r\n//         event.preventDefault();    //to not reload page and remove note\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <form>\r\n//                 <input onChange={handleChange} value={note.title} name=\"title\" placeholder=\"Title\" />\r\n//                 <textarea onChange={handleChange} name=\"content\" value={note.content} placeholder=\"Take a note...\" rows=\"3\" />\r\n//                 <button onClick={submitNote} >Add</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default CreateArea;\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}